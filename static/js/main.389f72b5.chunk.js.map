{"version":3,"sources":["types/SortType.ts","App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","default","query","setQuery","reversed","setReversed","goods","goodsToSort","sort","a","b","alphabetical","localeCompare","length","reverse","sortGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAAYA,E,6EAAAA,O,qBAAAA,I,+BAAAA,I,oBAAAA,M,gBCOCC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAoBK,IAAMC,EAAgB,WAC3B,MAA0BC,mBAAmBH,EAASI,SAAtD,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCH,oBAAS,GAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KACMC,EApBR,SAAmBA,EAAnB,GAAuE,IAAjCJ,EAAgC,EAAhCA,MAAOE,EAAyB,EAAzBA,SACrCG,EAAqB,YAAOD,GAalC,OAXAC,EAAYC,MAAK,SAACC,EAAGC,GACnB,OAAQR,GACN,KAAKL,EAASc,aACZ,OAAOF,EAAEG,cAAcF,GACzB,KAAKb,EAASgB,OACZ,OAAOJ,EAAEI,OAASH,EAAEG,OACtB,QACE,OAAO,MAINT,EAAWG,EAAYO,UAAYP,EAM5BQ,CAAUjB,EAAiB,CAAEI,QAAOE,aAElD,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UAAW,CACjC,WAAYhB,IAAUL,EAASc,eAEjCQ,QAAS,kBAAMhB,EAASN,EAASc,eALnC,iCAUA,wBACEM,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,WAAYhB,IAAUL,EAASgB,SAEjCM,QAAS,kBAAMhB,EAASN,EAASgB,SALnC,4BAUA,wBACEI,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,YAAad,IAEfe,QAAS,kBAAMd,GAAaD,IAL9B,sBASEF,IAAUL,EAASI,SAAWG,IAC9B,wBACEa,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPhB,EAASN,EAASI,SAClBI,GAAY,IALhB,sBAaJ,6BACE,6BACGC,EAAMc,KAAI,SAACC,GAAD,OACT,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,cCxFpCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.389f72b5.chunk.js","sourcesContent":["export enum SortType {\n  default,\n  alphabetical,\n  length,\n}\n","import React, { useState } from \"react\";\nimport \"bulma/css/bulma.css\";\nimport \"./App.scss\";\nimport cn from \"classnames\";\nimport { SortType } from \"./types/SortType\";\nimport { SortOptions } from \"./types/SortOptions\";\n\nexport const goodsFromServer = [\n  \"Dumplings\",\n  \"Carrot\",\n  \"Eggs\",\n  \"Ice cream\",\n  \"Apple\",\n  \"Bread\",\n  \"Fish\",\n  \"Honey\",\n  \"Jam\",\n  \"Garlic\",\n];\n\nfunction sortGoods(goods: string[], { query, reversed }: SortOptions) {\n  const goodsToSort: string[] = [...goods];\n\n  goodsToSort.sort((a, b) => {\n    switch (query) {\n      case SortType.alphabetical:\n        return a.localeCompare(b);\n      case SortType.length:\n        return a.length - b.length;\n      default:\n        return 0;\n    }\n  });\n\n  return reversed ? goodsToSort.reverse() : goodsToSort;\n}\n\nexport const App: React.FC = () => {\n  const [query, setQuery] = useState<SortType>(SortType.default);\n  const [reversed, setReversed] = useState(false);\n  const goods = sortGoods(goodsFromServer, { query, reversed });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\"button\", \"is-info\", {\n            \"is-light\": query !== SortType.alphabetical,\n          })}\n          onClick={() => setQuery(SortType.alphabetical)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\"button\", \"is-success\", {\n            \"is-light\": query !== SortType.length,\n          })}\n          onClick={() => setQuery(SortType.length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\"button\", \"is-warning\", {\n            \"is-light\": !reversed,\n          })}\n          onClick={() => setReversed(!reversed)}\n        >\n          Reverse\n        </button>\n        {(query !== SortType.default || reversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setQuery(SortType.default);\n              setReversed(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {goods.map((good) => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}